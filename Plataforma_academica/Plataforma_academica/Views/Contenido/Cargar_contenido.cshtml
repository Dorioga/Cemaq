@model Plataforma_academica.Models.contenido

@{
    ViewBag.Title = "Cargar_contenido";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<head>

    <meta name="viewport" content="width=device-width, initial-scale=1.0">


    <script type="text/javascript">

        function mostrar(value_elemento) {
            var total = 2; //total de mis capas
            var elemento, elemento1, tipo;
            elemento = document.getElementById('capa');
            elemento1 = document.getElementById('capa1');
            tipo = document.getElementById("fname");
            //elemento2 = document.getElementById('capa2');
            //elemento3 = document.getElementById('capa3');
            if (value_elemento == 1) {
                elemento.style.display = "block";
            } else {
                elemento.style.display = "none";
            }
            if (value_elemento == 2) {
                elemento1.style.display = "block";
                tipo.accept = ".jpg,png";
            } else {
                if (value_elemento == 4) {
                    elemento1.style.display = "block";
                    tipo.accept = ".mp3";
                } else {
                    if (value_elemento == 5) {
                        elemento1.style.display = "block";
                        tipo.accept = ".gif";
                    } else {
                        elemento1.style.display = "none";
                    }
                }
            }
        }
        function mostrar1(value_elemento) {
            var total = 2; //total de mis capas
            var elemento, elemento1;
            elemento = document.getElementById('capa4');
            elemento1 = document.getElementById('capa5');
            if (value_elemento == 3) {
                elemento.style.display = "block";
            } else {
                elemento.style.display = "none";
            }
            if (value_elemento == 2) {
                elemento1.style.display = "block";
            } else {
                elemento1.style.display = "none";
            }
        }
    </script>
</head>
@using (Html.BeginForm("Cargar_contenido", "contenido", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <!--Contenido-->
    <main class="con_form">
        <div class="formulario">
            @{
                Plataforma_academica.Models.Login usu = Session["usuario"] as Plataforma_academica.Models.Login;
                Plataforma_academica.Models.Subir_contenidos unid1 = Session["usuario11"] as Plataforma_academica.Models.Subir_contenidos;

            }
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <!--Titulos-->            
            <section class="section_contenido ">
                <article>
                    <h5>Titulo Actividad</h5>
                    @Html.EditorFor(model => model.nombre_contenido, new { htmlAttributes = new { @id = "contenido" } })
                    @Html.ValidationMessageFor(model => model.nombre_contenido, "", new { @class = "text-danger" })
                </article>               
            </section>
            <!--Descripcion-->
            <section class="section_contenido ">
                <article>
                    <h5>Descripción</h5>
                    @Html.TextAreaFor(model => model.descripcion_contenido, new { @class = "textarea" })
                </article>
            </section>
            <!--Tipo_Multimedia-->
            <section class="section_contenido">
                <article>
                    <h5>Tipo Multimedia</h5>
                    @Html.DropDownListFor(model => model.tipo_multimedia, (IEnumerable<SelectListItem>)ViewData["lista2"], "--Seleccionar--", new { @onchange = "mostrar(this.value)" })
                    <section class="oculta" id="capa">
                        <h5>Url del Vídeo</h5>
                        @Html.EditorFor(model => model.url_video, new { htmlAttributes = new { @type = "url", @id = "contenido", @placeholder = "URL del video*" } })
                        @Html.ValidationMessageFor(model => model.url_video, "", new { @class = "text-danger" })
                    </section>
                    <section class="oculta" id="capa1">
                        <h5>Multimedia Actividad</h5>
                        <input class="filechooser" id="fname" type="file" name="file" @*accept=".jpg,.png"*@ />
                        <h5>Link de referencia</h5>
                        @Html.EditorFor(model => model.link_referencia, new { htmlAttributes = new { @id = "contenido", @placeholder = "Http://*" } })
                        @Html.ValidationMessageFor(model => model.link_referencia, "", new { @class = "text-danger"})
                    </section>

                    <h5>Soporte para la Actividad/Sección</h5>
                    @Html.DropDownListFor(model => model.tipo_soporte, (IEnumerable<SelectListItem>)ViewData["lista1"], "--Seleccionar--", new { @onchange = "mostrar1(this.value)" })
                    <section class="oculta" id="capa4">
                        <h5>Link de apoyo</h5>
                        @Html.EditorFor(model => model.url_apoyo, new { htmlAttributes = new { @type = "url", @id = "contenido", @placeholder = "Http://*" } })
                        @Html.ValidationMessageFor(model => model.url_apoyo, "", new { @class = "text-danger" })
                    </section>
                    <section class="oculta" id="capa5">
                        <h5>Pdf de apoyo</h5>
                        <input class="filechooser" type="file" name="file1" accept=".pdf" />
                    </section>
                    <section id="tipo">
                        <h5>Tipo de Actividad</h5>
                        @Html.DropDownListFor(model => model.tipo_acti, (IEnumerable<SelectListItem>)ViewData["lista3"], "--Seleccionar--", new { })
                    </section>
                </article>
            </section>
            <!--Botones Guardar o Seguir-->
            <sections class="section_contenido ">
                <article>
                    <input type="submit" id="subir" name="subir" value="Guardar" class="boton" />
                    <input type="submit" id="seccion" name="seccion" value="Guardar Sección" class="boton" disabled />
                </article>
            </sections>
        </div>
        <!--MODAL-->

        <div class="modal fade" id="mostrarmodal1" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
            <div class="modal-dialog" >
                <div class="modal-content">
                    <div class="modal-header">
                        <h3>Verificacion de proceso</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    </div>
                    <div class="modal-body">
                        <h4>La actividad se creo de forma exitosa, ¿desea adicionar una nueva sección a esta actividad?</h4>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" name="agregar" value="1" class="btn btn-info" onclick="myFunction()">Agregar Sección</button>
                        <a href="/Seleccionar_para_subir_contenido/seleccionar_unidad_para_contenido" class="btn btn-danger">Finalizar Actividad</a>
                    </div>
                </div>
            </div>
        </div>
    </main>

    if (ViewBag.mensaje == "vacios")
    {
        @Scripts.Render("~/js/login_campos.js")
    }
    else
    {
        if (ViewBag.mensaje == "Registro exitoso")
        {
            @Scripts.Render("~/Scripts/CrearSeccion.js")

        }
        else
        {
            if (ViewBag.mensaje == "Habilitar Sección")
            {
                @Scripts.Render("~/Scripts/button_habilitar.js")
                    <script>
                        var elemento1 = document.getElementById("tipo");
                        elemento1.style.display = "none";
                    </script>

                            }
                        }
                    }

                }




