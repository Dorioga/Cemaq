@model Plataforma_academica.Models.Contenido_practico

@{
    ViewBag.Title = "Contenido_practico";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <head>

        <meta name="viewport" content="width=device-width, initial-scale=1.0">
     
        <script type="text/javascript">

        function mostrar(value_elemento) {
            var total = 2; //total de mis capas
            var elemento, elemento1, tipo;
            elemento = document.getElementById('capa');
            elemento1 = document.getElementById('capa1');
            tipo = document.getElementById("fname");
            if (value_elemento == 1) {
                elemento.style.display = "block";
            } else {
                elemento.style.display = "none";
            }
            if (value_elemento == 2) {
                elemento1.style.display = "block";
                tipo.accept = ".jpg,png";
            } else {
                if (value_elemento == 4) {
                    elemento1.style.display = "block";
                    tipo.accept = ".mp3";
                } else {
                    if (value_elemento == 5) {
                        elemento1.style.display = "block";
                        tipo.accept = ".gif";
                    } else {
                        elemento1.style.display = "none";
                    }
                }
            }
        }
        function mostrar1(value_elemento) {
            var total = 2; //total de mis capas
            var elemento, elemento1;
            elemento = document.getElementById('capa4');
            elemento1 = document.getElementById('capa5');
            if (value_elemento == 3) {
                elemento.style.display = "block";
            } else {
                elemento.style.display = "none";
            }
            if (value_elemento == 2) {
                elemento1.style.display = "block";
            } else {
                elemento1.style.display = "none";
            }
        }
        </script>
    </head>

@using (Html.BeginForm("Contenido_practico", "Contenido_practico", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <!--Contenido-->
<main class="con_form">
    <div class="formulario">
        @{
            Plataforma_academica.Models.Login usu = Session["usuario"] as Plataforma_academica.Models.Login;
            Plataforma_academica.Models.Contenido_practico pregunta = Session["usuario_pregunta"] as Plataforma_academica.Models.Contenido_practico;
            Plataforma_academica.Models.Subir_contenidos unid1 = Session["usuario11"] as Plataforma_academica.Models.Subir_contenidos;
            Plataforma_academica.Models.Contenido_practico practico = new Plataforma_academica.Models.Contenido_practico();

        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <!--Titulo del Examen-->
        <section class="section_contenido">
            <article>
                <h5>Titulo Exámen</h5>
                @Html.EditorFor(model => model.nombre_contenido, new { htmlAttributes = new { @id = "contenido" } })
                @Html.ValidationMessageFor(model => model.nombre_contenido, "", new { @class = "text-danger" })
            </article>
        </section>
        <!--Descripcion del Examen y Tipo de Examen-->
        <section class="section_contenido">
            <article>
                <h5>Descripción del Examen</h5>
                @Html.TextAreaFor(model => model.descripcion_contenido, new { @class = "textarea" })
                <h5>Tipo de Evaluación</h5>
                @Html.DropDownListFor(model => model.tipo_e, (IEnumerable<SelectListItem>)ViewData["lista4"], "--Seleccione one--")
            </article>
        </section>
        <!--Boton Guardar-->
        <section class="section_contenido">
            <article>
                <input type="submit" id="subir1" name="subir1" value="Guardar" class="boton" />
            </article>
        </section>

        <!--Condicionales de Guardado-->
        @{<!--Si se registro de forma satisfactoria-->
            if (ViewBag.mensaje == "Registro exitoso")
            {
                @Scripts.Render("~/Scripts/Deshabilitar_creacion_exame.js")
                @Scripts.Render("~/Scripts/button_habilitar_pregunt.js")
                <section class="section_contenido pregunta1">
                    <h5>Titulo de la pregunta</h5>
                    @Html.EditorFor(model => model.nombre_pregunta, new { htmlAttributes = new { @class = "contenido", @id = "contenido" } })
                    @Html.ValidationMessageFor(model => model.nombre_contenido, "", new { @class = "text-danger" })
                </section>
                <section class="section_contenido">
                    <article>
                        <h5>Enuciado de la pregunta</h5>
                        @Html.TextAreaFor(model => model.descripcion_pregunta, new { @class = "textarea" })
                    </article>
                </section>
                <section class="section_contenido">
                    <article>
                        <h5>Tipo Multimedia</h5>
                        @Html.DropDownListFor(model => model.tipo_multimedia, (IEnumerable<SelectListItem>)ViewData["lista2"], "--Seleccione--", new { @onchange = "mostrar(this.value)" })
                        <section class="oculta" id="capa">
                            <h5>Link del video</h5>
                            @Html.EditorFor(model => model.url_multimedia, new { htmlAttributes = new { @id = "contenido", @placeholder = "Http://*" } })
                            @Html.ValidationMessageFor(model => model.url_multimedia, "", new { @class = "text-danger" })
                        </section>
                        <section  class="oculta" id="capa1">
                            <h5>Multimedia Actividad</h5>
                            <input class="filechooser" id="fname" type="file" name="file" @*accept=".jpg,.png"*@ />
                            <h5>Link de referencia apa</h5>
                            @Html.EditorFor(model => model.link_apa, new { htmlAttributes = new { @id = "contenido", @placeholder = "Http://*" } })
                            @Html.ValidationMessageFor(model => model.link_apa, "", new { @class = "text-danger" })
                        </section>
                        <h5>Apoyo adicional</h5>
                        @Html.DropDownListFor(model => model.tipo_clasificacion, (IEnumerable<SelectListItem>)ViewData["lista1"], "--Seleccione--", new { @onchange = "mostrar1(this.value)"})
                        <section class="oculta" id="capa5">
                            <h5>Multimedia Actividad</h5>
                            <input type="file" name="file1" class="filechooser" />
                        </section>
                        <section class="oculta" id="capa4">
                            <h5>Link de referencia</h5>
                            @Html.EditorFor(model => model.link_apoyo, new { htmlAttributes = new { @id = "contenido", @placeholder = "Http://*" } })
                            @Html.ValidationMessageFor(model => model.link_apoyo, "", new { @class = "text-danger" })
                        </section>
                    </article>
                </section>
                <section class="section_contenido">
                    <article>
                        <h5>Tipo de pregunta que desea realizar</h5>
                        @Html.DropDownListFor(model => model.tipo_pregunta, (IEnumerable<SelectListItem>)ViewData["lista3"], "--Seleccione one--")
                        <input type="submit" id="elegir" name="elegir" value="Elegir" class="boton" />
                    </article>
                </section>
            }
            if (ViewBag.mensaje == "Registro pregunta")
            {
                if (pregunta.tipo_pregunta < 3)
                {
                    @Scripts.Render("~/Scripts/Deshabilitar_creacion_exame.js")
                    @Scripts.Render("~/Scripts/button_habilitar_pregunt.js")
                    <section>
                        <h5>Titulo de la pregunta</h5>
                        @Html.EditorFor(model => model.nombre_pregunta, new { htmlAttributes = new { @class = "form-control", @id = "contenido" } })
                        @Html.ValidationMessageFor(model => model.nombre_contenido, "", new { @class = "text-danger" })
                    </section>
                    <section>
                        <div class="card">
                            <div class="card-block p-3">
                                <article>
                                    <h5>Enuciado de la pregunta</h5>
                                    @Html.TextAreaFor(model => model.descripcion_pregunta, new { @class = "form-control" })
                                </article>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="card">
                            <div class="card-block p-3">
                                <h5>Tipo de pregunta que desea realizar</h5>
                                @Html.DropDownListFor(model => model.tipo_pregunta, (IEnumerable<SelectListItem>)ViewData["lista3"], "--Seleccione one--")
                                <input type="submit" id="elegir1" name="elegir1" value="Elegir" class="btn btn-primary" />
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="card">
                            <div class="card-block p-3">
                                <article>
                                    <p>
                                        <b>Ingrese las respuesta y elija cual es la correcta</b>
                                    </p>
                                    @{
                                        for (int i = 1; i < 5; i++)
                                        {
                                            <h5>Opción @i</h5>
                                            @Html.TextAreaFor(model => model.respuestas, new { @id = "respuestas", cols = "100%", Styles = "border-radius:4px" })
                                            @Html.DropDownListFor(model => model.tipo_condicion, (IEnumerable<SelectListItem>)ViewData["lista5"])
                                        }
                                    }
                                </article>
                            </div>
                        </div>
                    </section>
                    <section>
                        <div class="card">
                            <div class="card-block p-3">
                                <article>
                                    <input type="submit" id="seccion_2" name="seccion_2" value="Guardar Respuesta" class="btn btn-primary" />
                                </article>
                            </div>
                        </div>
                    </section>
                }
            }

        }

    </div>
    <div class="modal fade" id="mostrarmodal2" tabindex="-1" role="dialog" aria-labelledby="basicModal" aria-hidden="true">
        <div class="modal-dialog" style="position: initial;">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 >Verificacion de proceso</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <h4>La Pregunta y sus respuestas se han creado de forma exitosa, ¿Desea adicionar una nueva pregunta a esta practica?</h4>
                </div>
                <div class="modal-footer">
                    <button type="submit" name="agregar" value="1" class="btn btn-info" onclick="myFunction()">Agregar Pregunta</button>
                    <a href="/Seleccionar_para_subir_contenido/seleccionar_unidad_para_contenido" class="btn btn-danger">Finalizar Practica</a>
                </div>
            </div>
        </div>
    </div>
</main>

    <!--MODAL-->
    if (ViewBag.mensaje == "Registro otra respuesta")
    {
        @Scripts.Render("~/Scripts/CrearPregunta.js")
    }
 



}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
